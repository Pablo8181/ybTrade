name: a01_bsp_pullDaily_sheet_full

on:
  workflow_dispatch:
    inputs:
      since:
        description: "Backfill since (YYYY-MM-DD)"
        required: false
        default: "2017-01-01"
      provider:
        description: "binance | openbb"
        required: false
        default: "binance"
      symbol:
        description: "Symbol (e.g., BTCUSDT)"
        required: false
        default: "BTCUSDT"

permissions:
  contents: read
  id-token: write

jobs:
  build-deploy-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Smoke check required secrets (presence only)
        run: |
          set -euo pipefail
          req=(WIF_PROVIDER WIF_SERVICE_ACCOUNT GCP_PROJECT GCP_REGION SHEET_ID)
          for v in "${req[@]}"; do
            if [ -z "${{ secrets.WIF_PROVIDER }}" ] && [ "$v" = "WIF_PROVIDER" ]; then echo "::error::Missing secret: WIF_PROVIDER"; exit 1; fi
            if [ -z "${{ secrets.WIF_SERVICE_ACCOUNT }}" ] && [ "$v" = "WIF_SERVICE_ACCOUNT" ]; then echo "::error::Missing secret: WIF_SERVICE_ACCOUNT"; exit 1; fi
            if [ -z "${{ secrets.GCP_PROJECT }}" ] && [ "$v" = "GCP_PROJECT" ]; then echo "::error::Missing secret: GCP_PROJECT"; exit 1; fi
            if [ -z "${{ secrets.GCP_REGION }}" ] && [ "$v" = "GCP_REGION" ]; then echo "::error::Missing secret: GCP_REGION"; exit 1; fi
            if [ -z "${{ secrets.SHEET_ID }}" ] && [ "$v" = "SHEET_ID" ]; then echo "::error::Missing secret: SHEET_ID"; exit 1; fi
          done
          echo "All required secrets are present."

      - name: Install deps
        run: pip install -r a_apps/a01_bsp_pullDaily_sheet_full/requirements.txt

      - name: Auth to GCP (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Build & push image (lowercase + ensure repo)
        run: |
          set -euo pipefail

          REGION_RAW="${{ secrets.GCP_REGION }}"
          PROJ_RAW="${{ secrets.GCP_PROJECT }}"
          REGION="$(echo "$REGION_RAW" | tr '[:upper:]' '[:lower:]' | tr -d ' \t\r\n')"
          PROJ="$(echo "$PROJ_RAW" | tr '[:upper:]' '[:lower:]' | tr -d ' \t\r\n')"

          REPO="trading"  # must be lowercase
          HOST="${REGION}-docker.pkg.dev"
          IMAGE="${HOST}/${PROJ}/${REPO}/a01_bsp_pullDaily_sheet_full:$(git rev-parse --short HEAD)"

          echo "Using host: $HOST"
          echo "Project: $PROJ"
          echo "Region: $REGION"
          echo "Image:  $IMAGE"

          # Ensure Artifact Registry repo exists (idempotent)
          gcloud artifacts repositories describe "$REPO" --location="$REGION" >/dev/null 2>&1 || \
            gcloud artifacts repositories create "$REPO" \
              --repository-format=docker \
              --location="$REGION" \
              --description="Trading images"

          # Login + build + push
          gcloud auth configure-docker "$HOST" --quiet

          cat > Dockerfile <<'DOCKER'
          FROM python:3.11-slim
          WORKDIR /app
          COPY a_apps/a01_bsp_pullDaily_sheet_full/requirements.txt .
          RUN pip install --no-cache-dir -r requirements.txt
          COPY a_apps/a01_bsp_pullDaily_sheet_full/ .
          ENTRYPOINT ["python","/app/main.py"]
          DOCKER

          docker build -t "$IMAGE" .
          docker push "$IMAGE"

          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "REGION=$REGION" >> $GITHUB_ENV

      - name: Deploy Cloud Run Job
        run: |
          set -euo pipefail
          gcloud run jobs deploy a01_bsp_pullDaily_sheet_full \
            --image "$IMAGE" \
            --region "$REGION" \
            --service-account "${{ secrets.WIF_SERVICE_ACCOUNT }}" \
            --set-env-vars SHEET_ID=${{ secrets.SHEET_ID }},SHEET_TAB=spot1d,WRITE_MODE=replace \
            --set-env-vars PROVIDER=${{ github.event.inputs.provider || 'binance' }},SYMBOL=${{ github.event.inputs.symbol || 'BTCUSDT' }},SINCE=${{ github.event.inputs.since || '2017-01-01' }} \
            --max-retries 2 \
            --timeout 900s

      - name: Execute Job (wait)
        run: gcloud run jobs execute a01_bsp_pullDaily_sheet_full --region "$REGION" --wait
