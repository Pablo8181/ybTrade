name: BigQuery Bootstrap

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          create_credentials_file: true

      - name: Install BigQuery client
        run: |
          python -m pip install --upgrade pip
          python -m pip install "google-cloud-bigquery>=3.25.0"

      - name: Bootstrap dataset and tables
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          # Optional: override BQ location (defaults to EU if not set)
          BQ_LOCATION: EU
        run: |
          set -euo pipefail
          python - <<'PY'
          import os, sys
          from pathlib import Path
          from google.cloud import bigquery

          project = os.getenv("GCP_PROJECT", "").strip()
          if not project:
            print("::error::Missing GCP_PROJECT secret")
            sys.exit(1)

          location = os.getenv("BQ_LOCATION", "EU").strip() or "EU"
          sql_path = Path("tools/bq/bootstrap.sql")

          if sql_path.exists():
            raw = sql_path.read_text(encoding="utf-8")
            ddl = raw.replace("{{PROJECT}}", project).replace("{{LOCATION}}", location)
            print(f"[bootstrap] Using SQL from {sql_path}")
          else:
            print(f"[bootstrap] {sql_path} not found, using default DDL")
            ddl = f"""
            -- Create dataset (schema) if missing
            CREATE SCHEMA IF NOT EXISTS `{project}.ybtrade`
            OPTIONS (location="{location}");

            -- Bronze: raw OHLCV (daily)
            CREATE TABLE IF NOT EXISTS `{project}.ybtrade.bronze_ohlcv_daily` (
              date        DATE,
              symbol      STRING,
              open        FLOAT64,
              high        FLOAT64,
              low         FLOAT64,
              close       FLOAT64,
              volume      FLOAT64,
              qav         FLOAT64,
              ntr         INT64,
              tbb         FLOAT64,
              tbq         FLOAT64,
              open_ms     INT64,
              close_ms    INT64,
              provider    STRING,
              load_ts     TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
            );

            -- Silver: features (placeholder, extend later)
            CREATE TABLE IF NOT EXISTS `{project}.ybtrade.silver_features_daily` (
              date        DATE,
              symbol      STRING,
              -- add feature columns later
              load_ts     TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
            );

            -- Gold: publish to Sheets (placeholder, extend later)
            CREATE TABLE IF NOT EXISTS `{project}.ybtrade.gold_publish_spot1d` (
              date        DATE,
              symbol      STRING,
              -- align columns to Sheet export later
              load_ts     TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
            );
            """

          # Split on semicolons, but tolerate whitespace/blank lines
          statements = [s.strip() for s in ddl.split(";") if s.strip()]
          client = bigquery.Client(project=project, location=location)

          for stmt in statements:
            # Show first line for clarity in logs
            first = stmt.splitlines()[0][:180]
            print(f"[bootstrap] Executing: {first} ...")
            job = client.query(stmt)
            job.result()
          print("[bootstrap] Completed successfully.")
          PY
